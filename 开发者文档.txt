*****开发者文档 for Libmanager******
*****作者 ： 葛骏（阳泉一中，实际上，本项目中出现的Atlas、ForeverJimmy等名，都是本人网名，为方便，使用IDE的模板自动添加*****


*****架构、文件目录*****

本项目采用Server/Client、三层架构。

Libmanger\  # 项目根目录
    Client\  # 存储项目的客户端部分
        LibManager_Client_Csharp  # C#编写的客户端，具有图形操作界面（GUI），使用winform，只能在Windows操作系统上运行
        Python_Client  # Python 编写的客户端，只有命令行界面，理论上可以在全平台运行。不实用，一般只用来调试
    Server\  # 存储项目的服务端部分
        model\  # 模型层，数据库交互
			database.py  # 提供数据库的操作
        utility\  # 业务处理层，集成封装数据库交互
			userOperate.py  # 提供用户操作
			data_operate.py  # 提供数据操作
			log.py  # 提供日志操作
        # 其余文件属于表现层，负责直接与用户交互
        Libmanager_server.py  # 服务端主文件
		config.py  # 配置文件
		database.db  # sqlite3 数据库
		log.log  # 日志文件（直接用notepad++打开即可）

    venv\  # Python环境 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03)
        #  内容物不需要管。
        ../Scripts/python.exe  是python交互环境，可以直接打开运行python代码

    sqlite\  # sqlite3 数据库命令行工具，用来调试，可以直接exe运行，也可以在终端中运行。
        # http://www.cnblogs.com/hnrainll/archive/2011/04/22/2024627.html
        # 上述地址可以找到使用的教程
    __init__.py  # 这个玩意我不需要介绍
	README.md  # git 自动生成的玩意
	database.bat  # 数据库交互脚本
    path_deploy.bat  # 配置环境变量的脚本
    server_run.bat  # 直接运行server的脚本
    使用教程.txt  # 给小白看的的教程
    开发者文档.txt  # 就是本文件




*****数据库模板*****
users 用户
	id 自增字段
	name 存储用户名*
	email 电子邮件地址 唯一*
	pwd 密码*
	type 用户类型*
		0 普通的
		1 管理员
		2 游客，不允许借书
	book_id 借的书id
		-1 表示没借
	book_date 借书时间 时间戳
	is_login 是否登陆
		1 是
		0 否

books 书籍
	id 自增字段
	name 书名
	type 书籍类型*
	amount 书籍总量*
	remain 剩余书籍量*
	is_abled 是否允许借阅*
	
*****操作及返回值*****
1	 成功连接
-100 错误的操作类型
-101 数据库其他错误
-102 服务器其他错误

login 登陆
	0 成功
	-1 密码错误
	-2 没有注册
	-3 重复登陆
	
register 注册
	0 成功
	-1 重复的电子邮件地址
	
logout 注销
	0 成功
	-1 重复注销
	
borrow_book 借书
	0 成功
	-1 书籍借光
	-2 已经借书
	-3 用户类型错误

return_book 还书
	0 成功
	-1 无书可还

ban_user 封禁用户
	0 成功
	-1 错误的id
	-2 已经被封禁
	
ban_book 封禁书籍
	0 成功
	-1 错误的id
	-2 已经被封禁
	
add_book 添加书籍（收藏量）
	0 成功
	-1 错误的id
	
add_new_book 添加新书籍
	0 成功
	
delete_book 删除书籍
	0 成功
	-1 错误的id
